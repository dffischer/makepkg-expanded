#!/bin/bash

# Parse arguments.
while [ $OPTIND -le $# ]
do
  if getopts 'h' argument
  then
    case $argument in
      h)
        echo "usage: $0 [options | files ...]"
        echo 'display template inclusion relation in graphiz dot format'
        echo ' -h  only shows this help text'
        exit ;;
      \?) exit 1 ;;
    esac
  else
    files+=("${!OPTIND}")
    let OPTIND++
  fi
done

if [ ${#files} -gt 0 ]
then
  printf '%s\0' "${files[@]}"
else
  find -regextype posix-egrep \
    \( -name 'PKGBUILD' -o -regex '.*-[[:digit:]]+\.template' \) \
    -print0
fi | (
  # Categorize.
  declare -A templates
  while read -rd $'' file
  do
    if [[ $file == *.template ]]
    then
      templates["$file"]="${file##*/}"
    else
      pkgbuilds+=("$file")
    fi
  done


  # Find relations.
  extract_templates() {
    echo "  \"$2\";"
    grep -Po '(?<=template (input|start); name=).*(?=;|$)' $1 \
      | sed "s/.*/  \"$2\" -> \"\0\";/"
  }

  echo 'digraph templates {'
  echo '  node [style=filled, fillcolor=gray]'
  for template in "${!templates[@]}"
  do
    extract_templates "$template" \
      "${templates[$template]%-[[:digit:]].template}"
  done
  echo '  node [style=solid]'
  for pkgbuild in "${pkgbuilds[@]}"
  do
    extract_templates "$pkgbuild" \
      "$(makepkg-expanded -p "$pkgbuild" \
        -r 'makepkg --printsrcinfo -p "$1"' \
      | grep -Po '(?<=pkgbase = ).*')"
  done
  echo '}'
)
