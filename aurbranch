#!/bin/bash

# Parse arguments.
while getopts 'hp:' argument
do
  case $argument in
    h)
      echo "usage: $0 [options] <additional files>"
      echo 'Commit changes in the PKGBUILD to an AUR distribution branch.'
      echo ' -h           show this help text'
      echo ' -p <script>  file to use in place of PKGBUILD'
      exit ;;
    p) pkgbuild="$OPTARG" ;;
    \?) exit 1 ;;
  esac
done
shift $(($OPTIND - 1))


# Compose resources in a temporary directory.
tmpdir="$(mktemp -d --tmpdir aurbranch.XXXXXXXXXX)"
trap "rm -r '$tmpdir'" EXIT

export GIT_INDEX_FILE="$tmpdir/index"

srcinfo="$tmpdir/srcinfo"
mksrcinfo -o "$srcinfo" "${pkgbuild:=PKGBUILD}"
branch="refs/heads/aur/$(grep -Po '(?<=pkgbase = ).*' "$srcinfo")"


# Compose new revision.

# add <file> to the index at <location>. Without the latter, the file
# is placed as if it was rooted at the current working directory.
add() {
  git update-index --add --cacheinfo \
    $(stat -c '%a' $1),$(git hash-object --path "${2:-$1}" -w "$1"),"${2:-$1}"
}

for file
do
  if [ "$file" != "$pkgbuild" -a "${file##*/}" != PKGBUILD ]
  then
    add "$file"
  fi
done

add "$srcinfo" .SRCINFO
add "$pkgbuild" PKGBUILD


# Propose commit message, if necessary.
message="$tmpdir/COMMIT_EDITMSG"
if git show-ref --verify --quiet "$branch"
then
  if git diff-index --cached --quiet "$branch" --
  then
    # Nothing changed, nothing to commit.
    exit
  else
    parent=(-p "$branch")
    git log -1 --format=%B -- "$pkgbuild" "$@" > "$message"
  fi
else
  echo "create AUR distribution branch" > "$message"
fi

# Edit commit message.
eval $(git var GIT_EDITOR) "$message"


# Commit.
git update-ref "$branch" $(\
  git commit-tree $(git write-tree) \
  -F "$message" "${parent[@]}" )
