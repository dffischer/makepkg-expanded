#!/bin/bash

while [ "$1" ]; do
  case "$1" in
    -h)
      echo "usage: $0 [-h | -p package...]"
      echo 'builds the given packages, or all found below the current directory, expanding' \
        'makepkg-templates but leaving the original intact apart from the version numbers.'
      echo 'Templates are taken from a makepkg-templates directory found besides this script.'
      exit ;;
    -p)
      packages+=("$2")
      shift ;;
    *) pass+=("$1") ;;
  esac
  shift
done

templates=(
  --template-dir
  "$(grep -Po "(?<=^\ttemplate_dir => \[').*(?='\],$)" $(which makepkg-template))"
  --template-dir
  "$(realpath ${BASH_SOURCE[@]%/*})/makepkg-templates"
)
for dir in ${packages[@]:-$(find ! -readable -prune -o -iname PKGBUILD -printf "%h\n")}
do
  if [ ! -r "$dir/PKGBUILD" ]
  then
    echo "$dir does not contain any PKGBUILD"
  else
    ( cd "$dir"

      # expand and clean
      makepkg-template -o PKGBUILD.expanded "${templates[@]}" || exit $?
      sed -i '/# \(template\|vim\)/d' PKGBUILD.expanded

      # build
      makepkg -p PKGBUILD.expanded "${pass[@]}" || exit $?
      makepkg -Sp PKGBUILD.expanded "${pass[@]}" || exit $?

      # propagate changed pkgver
      oldpkgver=$(grep -Po '(?<=^pkgver=)[^ ]*' PKGBUILD)
      newpkgver=$(grep -Po '(?<=^pkgver=)[^ ]*' PKGBUILD.expanded)
      if [ $newpkgver != $oldpkgver ]
      then
        sed --follow-symlinks -i "s:^pkgver=[^ ]*:pkgver=$newpkgver:;s:^pkgrel=[^ ]*:pkgrel=1:" PKGBUILD
      fi
    ) || exit $?
  fi
done
